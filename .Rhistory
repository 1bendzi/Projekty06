)
)
#usunięcie rozszerzeń z nazw plików w korpusie
cutExtensions <- function(document){
meta(document, "id") <- gsub(pattern = "\\.txt$", replacement = "", meta(document, "id"))
return(document)
}
corpus <- tm_map(corpus, cutExtensions)
#utworzenie macierzy częstosci
tdmTfAll <- TermDocumentMatrix(corpus)
dtmTfAll <- DocumentTermMatrix(corpus)
tdmBinAll <- TermDocumentMatrix(
corpus,
control = list(
weighting = weightBin
)
)
tdmTfidfAll <- TermDocumentMatrix(
corpus,
control = list(
weighting = weightTfIdf
)
)
tdmTfBounds <- TermDocumentMatrix(
corpus,
control = list(
bounds = list(
global = c(2,16)
)
)
)
tdmTfidfBounds <- TermDocumentMatrix(
corpus,
control = list(
weighting = weightTfIdf,
bounds = list(
global = c(2,16)
)
)
)
dtmTfidfBounds <- DocumentTermMatrix(
corpus,
control = list(
weighting = weightTfIdf,
bounds = list(
global = c(2,16)
)
)
)
dtmTfBounds <- DocumentTermMatrix(
corpus,
control = list(
bounds = list(
global = c(2,16)
)
)
)
#konwersja macirzy rzadkich do macierzy klasycznch
tdmTfAllMatrix <- as.matrix(tdmTfAll)
dtmTfAllMatrix <- as.matrix(dtmTfAll)
tdmBinAllMatrix <- as.matrix(tdmBinAll)
tdmTfidfAllMatrix <- as.matrix(tdmTfidfAll)
tdmTfBoundsMatrix <- as.matrix(tdmTfBounds)
tdmTfidfBoundsMatrix <- as.matrix(tdmTfidfBounds)
dtmTfidfBoundsMatrix <- as.matrix(dtmTfidfBounds)
dtmTfBoundsMAtrix <- as.matrix(dtmTfBounds)
#eksport macirzy częstości do pliku .csv
matrixFile <- paste(
outputDir,
"tdmTfidf(2,16).csv",
sep = "\\"
)
write.table(
tdmTfidfBoundsMatrix,
file = matrixFile,
sep = ";",
dec = ",",
col.names = NA
)
#utworzenie macierzy częstosci
tdmTfAll <- TermDocumentMatrix(corpus)
dtmTfAll <- DocumentTermMatrix(corpus)
tdmBinAll <- TermDocumentMatrix(
corpus,
control = list(
weighting = weightBin
)
)
tdmTfidfAll <- TermDocumentMatrix(
corpus,
control = list(
weighting = weightTfIdf
)
)
tdmTfBounds <- TermDocumentMatrix(
corpus,
control = list(
bounds = list(
global = c(3,10)
)
)
)
tdmTfidfBounds <- TermDocumentMatrix(
corpus,
control = list(
weighting = weightTfIdf,
bounds = list(
global = c(3,10)
)
)
)
dtmTfidfBounds <- DocumentTermMatrix(
corpus,
control = list(
weighting = weightTfIdf,
bounds = list(
global = c(3,10)
)
)
)
dtmTfBounds <- DocumentTermMatrix(
corpus,
control = list(
bounds = list(
global = c(3,10)
)
)
)
#konwersja macirzy rzadkich do macierzy klasycznch
tdmTfAllMatrix <- as.matrix(tdmTfAll)
dtmTfAllMatrix <- as.matrix(dtmTfAll)
tdmBinAllMatrix <- as.matrix(tdmBinAll)
tdmTfidfAllMatrix <- as.matrix(tdmTfidfAll)
tdmTfBoundsMatrix <- as.matrix(tdmTfBounds)
tdmTfidfBoundsMatrix <- as.matrix(tdmTfidfBounds)
dtmTfidfBoundsMatrix <- as.matrix(dtmTfidfBounds)
dtmTfBoundsMAtrix <- as.matrix(dtmTfBounds)
#eksport macirzy częstości do pliku .csv
matrixFile <- paste(
outputDir,
"tdmTfidf(3,10).csv",
sep = "\\"
)
write.table(
tdmTfidfBoundsMatrix,
file = matrixFile,
sep = ";",
dec = ",",
col.names = NA
)
#utworzenie macierzy częstosci
tdmTfAll <- TermDocumentMatrix(corpus)
dtmTfAll <- DocumentTermMatrix(corpus)
tdmBinAll <- TermDocumentMatrix(
corpus,
control = list(
weighting = weightBin
)
)
tdmTfidfAll <- TermDocumentMatrix(
corpus,
control = list(
weighting = weightTfIdf
)
)
tdmTfBounds <- TermDocumentMatrix(
corpus,
control = list(
bounds = list(
global = c(10,19)
)
)
)
tdmTfidfBounds <- TermDocumentMatrix(
corpus,
control = list(
weighting = weightTfIdf,
bounds = list(
global = c(10,19)
)
)
)
dtmTfidfBounds <- DocumentTermMatrix(
corpus,
control = list(
weighting = weightTfIdf,
bounds = list(
global = c(10,19)
)
)
)
dtmTfBounds <- DocumentTermMatrix(
corpus,
control = list(
bounds = list(
global = c(10,19)
)
)
)
#konwersja macirzy rzadkich do macierzy klasycznch
tdmTfAllMatrix <- as.matrix(tdmTfAll)
dtmTfAllMatrix <- as.matrix(dtmTfAll)
tdmBinAllMatrix <- as.matrix(tdmBinAll)
tdmTfidfAllMatrix <- as.matrix(tdmTfidfAll)
tdmTfBoundsMatrix <- as.matrix(tdmTfBounds)
tdmTfidfBoundsMatrix <- as.matrix(tdmTfidfBounds)
dtmTfidfBoundsMatrix <- as.matrix(dtmTfidfBounds)
dtmTfBoundsMAtrix <- as.matrix(dtmTfBounds)
#eksport macirzy częstości do pliku .csv
matrixFile <- paste(
outputDir,
"tdmTfidf(10,19).csv",
sep = "\\"
)
write.table(
tdmTfidfBoundsMatrix,
file = matrixFile,
sep = ";",
dec = ",",
col.names = NA
)
#utworzenie macierzy częstosci
tdmTfAll <- TermDocumentMatrix(corpus)
dtmTfAll <- DocumentTermMatrix(corpus)
tdmBinAll <- TermDocumentMatrix(
corpus,
control = list(
weighting = weightBin
)
)
tdmTfidfAll <- TermDocumentMatrix(
corpus,
control = list(
weighting = weightTfIdf
)
)
tdmTfBounds <- TermDocumentMatrix(
corpus,
control = list(
bounds = list(
global = c(2,20)
)
)
)
tdmTfidfBounds <- TermDocumentMatrix(
corpus,
control = list(
weighting = weightTfIdf,
bounds = list(
global = c(2,20)
)
)
)
dtmTfidfBounds <- DocumentTermMatrix(
corpus,
control = list(
weighting = weightTfIdf,
bounds = list(
global = c(2,20)
)
)
)
dtmTfBounds <- DocumentTermMatrix(
corpus,
control = list(
bounds = list(
global = c(2,20)
)
)
)
#konwersja macirzy rzadkich do macierzy klasycznch
tdmTfAllMatrix <- as.matrix(tdmTfAll)
dtmTfAllMatrix <- as.matrix(dtmTfAll)
tdmBinAllMatrix <- as.matrix(tdmBinAll)
tdmTfidfAllMatrix <- as.matrix(tdmTfidfAll)
tdmTfBoundsMatrix <- as.matrix(tdmTfBounds)
tdmTfidfBoundsMatrix <- as.matrix(tdmTfidfBounds)
dtmTfidfBoundsMatrix <- as.matrix(dtmTfidfBounds)
dtmTfBoundsMAtrix <- as.matrix(dtmTfBounds)
#eksport macirzy częstości do pliku .csv
matrixFile <- paste(
outputDir,
"tdmTfidf(2,20).csv",
sep = "\\"
)
write.table(
tdmTfidfBoundsMatrix,
file = matrixFile,
sep = ";",
dec = ",",
col.names = NA
)
#załadowanie bibliotek
library(lsa)
#analiza ukrytych wymiarów semantycznych (dekompozycja wg. wartości osobliwych)
lsa <- lsa(tdmTfidfBoundsMatrix)
lsa$tk #odpowiednik macierzy U, współrzędne wyrazów
lsa$dk #odpowiednik macierzy V, współrzędne dokumentów
lsa$sk #odpowiednik macierzy D, znaczenie składowych
#przygotowanie danych do wykresu
coordTerms <- lsa$tk%*%diag(lsa$sk)
coorDocs <- lsa$dk%*%diag(lsa$sk)
#Linijke nizej trzeba zmienic! albo nie. cos z tym termsImportance sie robi.
# <- c("harry", "czarodziej", "dumbledore", "hermiona", "ron", "komnata", "powiedzieć", "chcieć", "dowiadywać", "albus", "syriusz", "lupin", "umbridge", "edmund", "kaspian", "łucja", "czarownica", "piotr", "zuzanna", "aslana", "narnii", "baron", "dziecko", "wyspa", "bell", "edward", "wampir", "jacob")
termsImportance <- diag(lsa$tk%*%diag(lsa$sk)%*%t(diag(lsa$sk))%*%t(lsa$tk))
importantTerms <- names(tail(sort(termsImportance),25))
coordTerms <- coordTerms[terms,]
coordTerms <- coordTerms[importantTerms,]
legend <- paste(paste("d", 1:19, sep = ""), rownames(coorDocs), sep = "<-")
x1 <- coorDocs[,1]
y1 <- coorDocs[,2]
x2 <- coordTerms[,1]
y2 <- coordTerms[,2]
#wykres dokumentów i wybranych słów w przestrzeni dwuwymiatowej
options(scipen = 5)
plot(
x1,
y1,
xlim = c(-0.2,0.05),
#ylim = c(,),
pch = 1,
col = "orange"
)
points(
x2,
y2,
pch = 2,
col = "brown"
)
text(
x1,
y1,
paste("d", 1:19, sep = ""),
col = "orange",
pos = 4
)
text(
x2,
y2,
rownames(coordTerms),
col = "brown",
pos = 4
)
legend("bottomleft", legend, cex = 0.7, text.col = "orange")
#eksport wykresu do pliku .png
plotFile <- paste(
outputDir,
"lsa.png",
sep = "\\"
)
png(file = plotFile)
options(scipen = 5)
plot(
x1,
y1,
xlim = c(-0.2,0.05),
#ylim = c(,),
pch = 1,
col = "orange"
)
points(
x2,
y2,
pch = 2,
col = "brown"
)
text(
x1,
y1,
paste("d", 1:19, sep = ""),
col = "orange",
pos = 4
)
text(
x2,
y2,
rownames(coordTerms),
col = "brown",
pos = 4
)
legend("bottomleft", legend, cex = 0.5, text.col = "orange")
dev.off()
load("C:/Users/Beniamin/Desktop/Git/Projekty06/workspaces/po preprocessingu.RData")
#utworzenie macierzy częstosci
tdmTfAll <- TermDocumentMatrix(corpus)
dtmTfAll <- DocumentTermMatrix(corpus)
tdmBinAll <- TermDocumentMatrix(
corpus,
control = list(
weighting = weightBin
)
)
tdmTfidfAll <- TermDocumentMatrix(
corpus,
control = list(
weighting = weightTfIdf
)
)
tdmTfBounds <- TermDocumentMatrix(
corpus,
control = list(
bounds = list(
global = c(2,16)
)
)
)
tdmTfidfBounds <- TermDocumentMatrix(
corpus,
control = list(
weighting = weightTfIdf,
bounds = list(
global = c(2,16)
)
)
)
dtmTfidfBounds <- DocumentTermMatrix(
corpus,
control = list(
weighting = weightTfIdf,
bounds = list(
global = c(2,16)
)
)
)
dtmTfBounds <- DocumentTermMatrix(
corpus,
control = list(
bounds = list(
global = c(2,16)
)
)
)
#konwersja macirzy rzadkich do macierzy klasycznch
tdmTfAllMatrix <- as.matrix(tdmTfAll)
dtmTfAllMatrix <- as.matrix(dtmTfAll)
tdmBinAllMatrix <- as.matrix(tdmBinAll)
tdmTfidfAllMatrix <- as.matrix(tdmTfidfAll)
tdmTfBoundsMatrix <- as.matrix(tdmTfBounds)
tdmTfidfBoundsMatrix <- as.matrix(tdmTfidfBounds)
dtmTfidfBoundsMatrix <- as.matrix(dtmTfidfBounds)
dtmTfBoundsMAtrix <- as.matrix(dtmTfBounds)
#eksport macirzy częstości do pliku .csv
matrixFile <- paste(
outputDir,
"tdmTfidf(2,16).csv",
sep = "\\"
)
write.table(
tdmTfidfBoundsMatrix,
file = matrixFile,
sep = ";",
dec = ",",
col.names = NA
)
#analiza głównych składowych
pca <- prcomp(dtmTfidfBounds)
x <- pca$x[,1]
y <- pca$x[,2]
#przygotowanie legendy
legend <- paste(
paste("d", 1:length(rownames(dtmTfidfBoundsMatrix)),sep = ""),
rownames(dtmTfidfBoundsMatrix),
sep = "<-"
)
#wykres dokumentów w przestrzeni dwuwymiarowej
plot(
x,
y,
#xlim = c(-0.5,-0.2),
#ylim = c(-0.2,0.1),
xlab="Współrzędna syntetyczna 1",
ylab="Współrzędna syntetyczna 2",
main="Analiza głównych składowych",
col = "orange"
)
text(
x,
y,
labels = paste("d", 1:length(rownames(dtmTfidfBoundsMatrix)),sep = ""),
pos = 3,
col = "orange"
)
legend("bottom", legend, cex=.5, text.col = "orange")
#eksport wykresu do pliku .png
plotFile <- paste(
outputDir,
"\\",
"pca.png",
sep = ""
)
png(file = plotFile)
plot(
x,
y,
xlab="Współrzędna syntetyczna 1",
ylab="Współrzędna syntetyczna 2",
main="Analiza głównych składowych",
col = "orange"
)
text(
x,
y,
labels = paste("d", 1:length(rownames(dtmTfidfBoundsMatrix)),sep = ""),
pos = 3,
col = "orange"
)
legend("bottom", legend, cex=.65, text.col = "orange")
dev.off()
install.packages("topicmodels")
install.packages("wordcloud")
save.image("C:/Users/Beniamin/Desktop/Git/Projekty06/workspaces/po zrobieniu pierwsze pca.RData")
install.packages(c("corrplot", "dendextend", "flexclust"))
